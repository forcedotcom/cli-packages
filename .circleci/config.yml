version: 2.1

_refs:
  cwd: &cwd ~/jobs
  ssh-config: &ssh-config
    fingerprints:
      - 'ce:1f:16:a0:99:24:bc:66:b9:1b:61:e9:01:b8:1d:c3'
  cache-config: &cache-config
    key: dependency-cache-{{ checksum "package.json" }}
  restore-cache: &restore-cache
    <<: *cache-config
  save-cache: &save-cache
    <<: *cache-config
    paths:
      - ~/jobs/node_modules
      - /usr/local/share/.cache/yarn
      - /usr/local/share/.config/yarn
  lerna: &lerna
    name: Installing Lerna
    command: npm install -g lerna
  install: &install
    name: Install dependencies
    command: yarn
  bootstrap: &bootstrap
    name: Bootstraping
    command: yarn bootstrap
  build: &build
    name: Building
    command: yarn build
  test: &test
    name: Testing
    command: yarn ci-test
  gh-config: &gh-config
    name: Configuring GitHub
    command: |
      git config credential.helper 'cache --timeout=120'
      git config user.email "$GH_EMAIL"
      git config user.name "Deployment Bot"
  npm-config: &npm-config
    name: Configuring NPM
    command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc

_defaults: &defaults
  docker:
    - image: node:latest
  working_directory: *cwd

jobs:
  node-latest: &node-test
    <<: *defaults
    steps:
      - add_ssh_keys: *ssh-config
      - checkout
      - restore_cache: *restore-cache
      - run: *install
      - run: *bootstrap
      - run: *build
      - run: *test
      - save_cache: *save-cache
  node-14:
    <<: *node-test
    docker:
      - image: node:14
  node-12:
    <<: *node-test
    docker:
      - image: node:12
  release:
    <<: *defaults
    steps:
      - add_ssh_keys: *ssh-config
      - checkout
      - restore_cache: *restore-cache
      - run: *gh-config
      - run: *lerna
      - run: *install
      - run: *bootstrap
      - run: *build
      - run: *npm-config
      - run:
          name: Status
          command: git status
      - run:
          name: Publishing
          command: lerna publish --conventional-commits -y
      - save_cache: *save-cache
  ci-docs:
    <<: *defaults
    steps:
      - add_ssh_keys: *ssh-config
      - checkout
      - restore_cache: *restore-cache
      - run: *install
      - run: *bootstrap
      - run: *build
      - run: *gh-config
      - run: yarn ci-docs
      - save_cache: *save-cache

workflows:
  version: 2
  cli-packages:
    jobs:
      - node-latest
      - node-14
      - node-12
      - release:
          filters:
            branches: { only: main }
          requires:
            - node-latest
            - node-14
            - node-12
      - ci-docs:
          filters:
            branches: { only: main }
          requires:
            - release
